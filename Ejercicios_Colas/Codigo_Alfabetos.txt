#include <iostream>
#include <string.h>
#include <stack>
#include <stdlib.h>
#include <vector>

using namespace std;


void GenerarPalabras(vector<string>& Palabras, string Alfabeto, string Prefijo, int LongitudLenguajes){
    //Si la longitud del prefijo es igual a n, agregar la palabra al vector de Palabras
    if(LongitudLenguajes == 0){
        Palabras.push_back(Prefijo);
    }
    else{
        //Agregar cada caracter del alfabeto al prefijo y generar todas las posibles palabras de longitud n
        for(int i = 0; i<Alfabeto.length(); i++){
            GenerarPalabras(Palabras, Alfabeto, Prefijo+Alfabeto[i], LongitudLenguajes-1);
        }
    }
}

int main()
{
    string AlfabetoAB = "ab";
    vector<string> AlfabetoSigmaAB;
    int LongitudAlfabeto, LongitudLenguajes, opcion, OpcionSalir, i;
    string Palabra;
    string Alfabeto;
    
    do{
        cout << "\nLa generacion de lenguajes son los siguientes: \n";
        cout << "\n1. Palabras de longitud 0 hasta el numero dado que tengan longitud par";
        cout << "\n2. Palabras de longitud 0 hasta el numero dado que empiecen con una a y terminen con una b";
        cout << "\n3. Palabras de Longitud 0 hasta el numero dado generadas a partir del alfabeto";
        
        cout << "\n\nQue desea hacer?";
        cin >> opcion;
        
        switch (opcion){
            case 1:{
                
                cout << "\nAhora dame la longitud de las palabras para los lenguajes: ";
                cin >> LongitudLenguajes;
                
                for(int j = 0; j <= LongitudLenguajes; j++){
                    GenerarPalabras(AlfabetoSigmaAB, AlfabetoAB, "", j);
                }
                cout << "\n";
                cout << "\n";
                for(i = 0;i < AlfabetoSigmaAB.size(); i++){
                    
                    if(AlfabetoSigmaAB[i].length()%2 == 0){
                        cout << AlfabetoSigmaAB[i]<< "\n";
                    }
                }
                
                break;
            }
            case 2:{
                
                cout << "\nAhora dame la longitud de las palabras para los lenguajes: ";
                cin >> LongitudLenguajes;
                
                for(int j = 0; j <= LongitudLenguajes; j++){
                    GenerarPalabras(AlfabetoSigmaAB, AlfabetoAB, "", j);
                }
                
                for(i = 0;i < AlfabetoSigmaAB.size(); i++){
                    Palabra = AlfabetoSigmaAB[i];
                    if(Palabra[0] == 'a' && Palabra[Palabra.length()-1] == 'b'){
                        cout << AlfabetoSigmaAB[i]<< "\n";
                    }
                }
                
                break;
            }
            case 3:{
                
                cout << "\nDame las letras del alfabeto: ";
                cin >> Alfabeto;
                
                cout << "\nAhora dame la longitud de las palabras para los lenguajes: ";
                cin >> LongitudLenguajes;
                
                vector<string> Palabras; 
                
                for(int j = 0; j <= LongitudLenguajes; j++){
                    GenerarPalabras(Palabras, Alfabeto, "", j);
                }
                
                
                for(int i = 0; i < Palabras.size(); i++){
                    cout << Palabras[i] << "\n";
                }
                
                break;
            }
        }
        cout << "\n1. No\n2. Si\nDesea realizar otro tipo de lenguaje? ";
        cin >> OpcionSalir;
    }while(OpcionSalir != 1);
    
    
    return 0;
}


